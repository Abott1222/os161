cscope 15 $HOME/os161/user/include               0000007361
	@assert.h

30 #i‚de‡
_ASSERT_H_


31 
	#_ASSERT_H_


	)

36 #unde‡
as£π


41 
__bad_as£π
(c⁄° *
fûe
, 
löe
, c⁄° *
msg
);

47 #ifde‡
NDEBUG


50 
	#as£π
(
x
Ë(()(x)Ë

	)

52 
	#as£π
(
x
Ë(()0Ë

	)

56 
	#as£π
(
x
Ë((xË? ()0 : 
	`__bad_as£π
(
__FILE__
, 
__LINE__
, #x))

	)

	@err.h

30 #i‚de‡
_ERR_H_


31 
	#_ERR_H_


	)

33 
	~<kîn/ty≥s.h
>

47 
w¨n
(c⁄° *
fmt
, ...);

48 
w¨nx
(c⁄° *
fmt
, ...);

49 
îr
(
exôcode
, c⁄° *
fmt
, ...);

50 
îrx
(
exôcode
, c⁄° *
fmt
, ...);

52 
vw¨n
(c⁄° *
fmt
, 
__va_li°
);

53 
vw¨nx
(c⁄° *
fmt
, 
__va_li°
);

54 
vîr
(
exôcode
, c⁄° *
fmt
, 
__va_li°
);

55 
vîrx
(
exôcode
, c⁄° *
fmt
, 
__va_li°
);

	@errno.h

30 #i‚de‡
_ERRNO_H_


31 
	#_ERRNO_H_


	)

34 
	~<kîn/î∫o.h
>

37 
î∫o
;

	@fcntl.h

31 
	~<uni°d.h
>

	@limits.h

30 #i‚de‡
_LIMITS_H_


31 
	#_LIMITS_H_


	)

38 
	~<kîn/limôs.h
>

41 
	#NAME_MAX
 
__NAME_MAX


	)

42 
	#PATH_MAX
 
__PATH_MAX


	)

43 
	#ARG_MAX
 
__ARG_MAX


	)

44 
	#PID_MIN
 
__PID_MIN


	)

45 
	#PID_MAX
 
__PID_MAX


	)

46 
	#PIPE_BUF
 
__PIPE_BUF


	)

47 
	#NGROUPS_MAX
 
__NGROUPS_MAX


	)

48 
	#LOGIN_NAME_MAX
 
__LOGIN_NAME_MAX


	)

49 
	#OPEN_MAX
 
__OPEN_MAX


	)

50 
	#IOV_MAX
 
__IOV_MAX


	)

	@setjmp.h

30 #i‚de‡
_SETJMP_H_


31 
	#_SETJMP_H_


	)

34 
	~<machöe/£tjmp.h
>

49 
£tjmp
(
jmp_buf
 
jb
);

50 
l⁄gjmp
(
jmp_buf
 
jb
, 
code
);

	@signal.h

30 
	~<kîn/sig«l.h
>

	@stdarg.h

30 #i‚de‡
_STDARG_H_


31 
	#_STDARG_H_


	)

33 
	~<kîn/ty≥s.h
>

41 
__va_li°
 
	tva_li°
;

43 
	#va_°¨t
(
≠
,
fmt
Ë
	`__buûtö_°d¨g_°¨t
◊p,fmt)

	)

44 
	#va_¨g
(
≠
,
t
Ë
	`__buûtö_va_¨g
◊p,t)

	)

45 
	#va_c›y
(
≠1
,
≠2
Ë
	`__buûtö_va_c›y
◊p1,≠2)

	)

46 
	#va_íd
(
≠
Ë
	`__buûtö_va_íd
◊p)

	)

	@stdint.h

30 #i‚de‡
_STDINT_H_


31 
	#_STDINT_H_


	)

37 
	~<kîn/ty≥s.h
>

39 
__i8
 
	töt8_t
;

40 
__i16
 
	töt16_t
;

41 
__i32
 
	töt32_t
;

42 
__i64
 
	töt64_t
;

43 
__u8
 
	tuöt8_t
;

44 
__u16
 
	tuöt16_t
;

45 
__u32
 
	tuöt32_t
;

46 
__u64
 
	tuöt64_t
;

48 
__öçå_t
 
	töçå_t
;

49 
__uöçå_t
 
	tuöçå_t
;

	@stdio.h

30 #i‚de‡
_STDIO_H_


31 
	#_STDIO_H_


	)

37 
	~<kîn/ty≥s.h
>

38 
	~<ty≥s/size_t.h
>

39 
	~<sys/nuŒ.h
>

42 
	#EOF
 (-1)

	)

48 
__v¥ötf
((*
£ndfunc
)(*
˛õ¡d©a
, c⁄° *, 
size_t
 
Àn
),

49 *
˛õ¡d©a
,

50 c⁄° *
fmt
,

51 
__va_li°
 
≠
);

54 
	`¥ötf
(c⁄° *
fmt
, ...);

55 
	`v¥ötf
(c⁄° *
fmt
, 
__va_li°
 
≠
);

56 
	`¢¥ötf
(*
buf
, 
size_t
 
Àn
, c⁄° *
fmt
, ...);

57 
	`v¢¥ötf
(*
buf
, 
size_t
 
Àn
, c⁄° *
fmt
, 
__va_li°
 
≠
);

60 
	`puts
(const *);

64 
	`__puts
(const *);

67 
	`putch¨
();

70 
	`gëch¨
();

	@stdlib.h

30 #i‚de‡
_STDLIB_H_


31 
	#_STDLIB_H_


	)

33 
	~<kîn/ty≥s.h
>

34 
	~<ty≥s/size_t.h
>

35 
	~<sys/nuŒ.h
>

40 
©oi
(const *);

45 
ab‹t
();

51 
exô
(
code
);

56 
sy°em
(c⁄° *
comm™d
);

61 
	#RAND_MAX
 0x7fffffff

	)

62 
øndom
();

63 
§™dom
(
£ed
);

64 *
öô°©e
(, *, 
size_t
);

65 *
£t°©e
(*);

70 *
mÆloc
(
size_t
 
size
);

71 
‰ì
(*
±r
);

	@string.h

30 #i‚de‡
_STRING_H_


31 
	#_STRING_H_


	)

33 
	~<kîn/ty≥s.h
>

34 
	~<ty≥s/size_t.h
>

35 
	~<sys/nuŒ.h
>

40 *
°rˇt
(*, const *);

41 *
°r˝y
(*, const *);

42 *
°rchr
(const *, );

43 *
°ºchr
(const *, );

44 
°rcmp
(const *, const *);

45 
size_t
 
°æí
(const *);

46 *
°πok_r
(*, const *, **);

47 *
°πok
(*, const *);

49 *
mem£t
(*, 
c
, 
size_t
);

50 *
mem˝y
(*, c⁄° *, 
size_t
);

51 *
memmove
(*, c⁄° *, 
size_t
);

52 
memcmp
(c⁄° *, c⁄° *, 
size_t
);

57 c⁄° *
°ªº‹
(
îrcode
);

62 
bzîo
(*, 
size_t
);

	@sys/endian.h

30 #i‚de‡
_SYS_ENDIAN_H_


31 
	#_SYS_ENDIAN_H_


	)

33 
	~<kîn/ídün.h
>

	@sys/ioctl.h

31 
	~<uni°d.h
>

	@sys/null.h

30 #i‚de‡
_SYS_NULL_H_


31 
	#_SYS_NULL_H_


	)

37 
	#NULL
 ((*)0)

	)

	@sys/reboot.h

31 
	~<uni°d.h
>

	@sys/stat.h

30 #i‚de‡
_SYS_STAT_H_


31 
	#_SYS_STAT_H_


	)

36 
	~<kîn/°©.h
>

37 
	~<kîn/°©ty≥s.h
>

42 
	#S_ISDIR
(
mode
Ë((modê& 
_S_IFMT
Ë=
_S_IFDIR
)

	)

43 
	#S_ISREG
(
mode
Ë((modê& 
_S_IFMT
Ë=
_S_IFREG
)

	)

44 
	#S_ISDIR
(
mode
Ë((modê& 
_S_IFMT
Ë=
_S_IFDIR
)

	)

45 
	#S_ISLNK
(
mode
Ë((modê& 
_S_IFMT
Ë=
_S_IFLNK
)

	)

46 
	#S_ISIFO
(
mode
Ë((modê& 
_S_IFMT
Ë=
_S_IFIFO
)

	)

47 
	#S_ISSOCK
(
mode
Ë((modê& 
_S_IFMT
Ë==
_S_IFSOCK
)

	)

48 
	#S_ISCHR
(
mode
Ë((modê& 
_S_IFMT
Ë=
_S_IFCHR
)

	)

49 
	#S_ISBLK
(
mode
Ë((modê& 
_S_IFMT
Ë=
_S_IFBLK
)

	)

55 
	#S_IFMT
 
_S_IFMT


	)

56 
	#S_IFREG
 
_S_IFREG


	)

57 
	#S_IFDIR
 
_S_IFDIR


	)

58 
	#S_IFLNK
 
_S_IFLNK


	)

59 
	#S_IFIFO
 
_S_IFIFO


	)

60 
	#S_IFSOCK
 
_S_IFSOCK


	)

61 
	#S_IFCHR
 
_S_IFCHR


	)

62 
	#S_IFBLK
 
_S_IFBLK


	)

71 
f°©
(
fûeh™dÀ
, 
°©
 *
buf
);

72 
°©
(c⁄° *
∑th
, °© *
buf
);

73 
l°©
(c⁄° *
∑th
, 
°©
 *
buf
);

80 
mkdú
(c⁄° *
dú«me
, 
ign‹e
);

	@sys/types.h

30 #i‚de‡
_SYS_TYPES_H_


31 
	#_SYS_TYPES_H_


	)

42 
	~<kîn/ty≥s.h
>

45 
	~<ty≥s/size_t.h
>

46 
	~<sys/nuŒ.h
>

55 
__ssize_t
 
	tssize_t
;

56 
__±rdiff_t
 
	t±rdiff_t
;

59 
__blk˙t_t
 
	tblk˙t_t
;

60 
__blksize_t
 
	tblksize_t
;

61 
__daddr_t
 
	tdaddr_t
;

62 
__dev_t
 
	tdev_t
;

63 
__fsid_t
 
	tfsid_t
;

64 
__gid_t
 
	tgid_t
;

65 
__ö_addr_t
 
	tö_addr_t
;

66 
__ö_p‹t_t
 
	tö_p‹t_t
;

67 
__öo_t
 
	töo_t
;

68 
__mode_t
 
	tmode_t
;

69 
__∆ök_t
 
	t∆ök_t
;

70 
__off_t
 
	toff_t
;

71 
__pid_t
 
	tpid_t
;

72 
__æim_t
 
	tæim_t
;

73 
__ß_Ámûy_t
 
	tß_Ámûy_t
;

74 
__time_t
 
	ttime_t
;

75 
__uid_t
 
	tuid_t
;

77 
__nfds_t
 
	tnfds_t
;

78 
__sockÀn_t
 
	tsockÀn_t
;

84 
	#CHAR_BIT
 
__CHAR_BIT


	)

	@sys/wait.h

31 
	~<uni°d.h
>

	@time.h

31 
	~<uni°d.h
>

	@types/size_t.h

30 #i‚de‡
_TYPES_SIZE_T_H_


31 
	#_TYPES_SIZE_T_H_


	)

33 
	~<kîn/ty≥s.h
>

34 
__size_t
 
	tsize_t
;

	@unistd.h

30 #i‚de‡
_UNISTD_H_


31 
	#_UNISTD_H_


	)

33 
	~<sys/ty≥s.h
>

40 
	~<kîn/f˙é.h
>

41 
	~<kîn/io˘l.h
>

42 
	~<kîn/ªboŸ.h
>

43 
	~<kîn/£ek.h
>

44 
	~<kîn/time.h
>

45 
	~<kîn/uni°d.h
>

46 
	~<kîn/waô.h
>

110 #ifde‡
__GNUC__


112 
	#__DEAD
 
	`__©åibuã__
((
__n‹ëu∫__
))

	)

114 
	#__DEAD


	)

118 
__DEAD
 
_exô
(
code
);

119 
execv
(c⁄° *
¥og
, *c⁄° *
¨gs
);

120 
pid_t
 
f‹k
();

121 
waôpid
(
pid_t
 
pid
, *
ªtu∫code
, 
Êags
);

127 
›í
(c⁄° *
fûíame
, 
Êags
, ...);

128 
ªad
(
fûeh™dÀ
, *
buf
, 
size_t
 
size
);

129 
wrôe
(
fûeh™dÀ
, c⁄° *
buf
, 
size_t
 
size
);

130 
˛o£
(
fûeh™dÀ
);

131 
ªboŸ
(
code
);

132 
sync
();

134 
rmdú
(c⁄° *
dú«me
);

137 
gëpid
();

138 
io˘l
(
fûeh™dÀ
, 
code
, *
buf
);

139 
off_t
 
l£ek
(
fûeh™dÀ
, off_à
pos
, 
code
);

140 
fsync
(
fûeh™dÀ
);

141 
·runˇã
(
fûeh™dÀ
, 
off_t
 
size
);

142 
ªmove
(c⁄° *
fûíame
);

143 
ª«me
(c⁄° *
ﬁdfûe
, c⁄° *
√wfûe
);

144 
lök
(c⁄° *
ﬁdfûe
, c⁄° *
√wfûe
);

146 
chdú
(c⁄° *
∑th
);

149 *
sbrk
(
ch™ge
);

150 
gëdúíåy
(
fûeh™dÀ
, *
buf
, 
size_t
 
buÊí
);

151 
symlök
(c⁄° *
èrgë
, c⁄° *
lök«me
);

152 
ªadlök
(c⁄° *
∑th
, *
buf
, 
size_t
 
buÊí
);

153 
dup2
(
fûeh™dÀ
, 
√wh™dÀ
);

154 
pùe
(
fûeh™dÀs
[2]);

155 
time_t
 
__time
—ime_à*
£c⁄ds
, *
«no£c⁄ds
);

156 
__gëcwd
(*
buf
, 
size_t
 
buÊí
);

164 *
gëcwd
(*
buf
, 
size_t
 
buÊí
);

165 
time_t
 
time
—ime_à*
£c⁄ds
);

	@
1
.
0
22
216
assert.h
err.h
errno.h
fcntl.h
limits.h
setjmp.h
signal.h
stdarg.h
stdint.h
stdio.h
stdlib.h
string.h
sys/endian.h
sys/ioctl.h
sys/null.h
sys/reboot.h
sys/stat.h
sys/types.h
sys/wait.h
time.h
types/size_t.h
unistd.h
